name: akingbee

defaults:
  run:
    shell: bash

jobs:
  validation:
    name: lint & pytest
    runs-on: ubuntu-latest

    env:
      AKB_DATABASE_HOST: localhost
      AKB_DATABASE_PORT: 5432
      AKB_DATABASE_USER: dbtest
      AKB_DATABASE_PASSWORD: dbtest
      AKB_DATABASE_DBNAME: dbtest

    steps:
      - name: install go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.5'
      - name: checkout
        uses: actions/checkout@v4
      - name: install project
        run: go mod download
      - name: run go fmt
        run: go fmt
  
  release:
    name: release new version
    runs-on: ubuntu-latest
    needs: validation
    if: github.ref == 'refs/heads/master'

    env:
      GITHUB_TOKEN: ${{ secrets.CI_USER_TOKEN }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: 'master'
      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install dependencies
        run: sudo npm install -g semantic-release @semantic-release/git @semantic-release/exec
      - name: pull master
        run: git pull
      - name: run semantic release
        run: semantic-release

  build:
    name: build docker image
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'master'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: install poetry
        run: pip install poetry
      - name: git latest tag
        run: |
          git fetch --tags --prune --unshallow
          tag=$(git describe --tags --abbrev=0 --match 'aristaeus-*')
          version=$(echo $tag | cut -d'-' -f2 | cut -d'v' -f2)
          echo "image_version=${version}" >> $GITHUB_ENV
      - name: Export requirements
        run: poetry export -o requirements.txt
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: aristaeus
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            yomain/aristaeus:${{ env.image_version }}
            yomain/aristaeus:latest
